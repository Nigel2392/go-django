package features

import (
	"context"
	"io"
	"github.com/Nigel2392/go-django/src/contrib/editor"
)

func init() {
	editor.Register(CheckListBlock)
}

type checkListItem struct {
	Text    string `json:"text"`
	Checked bool   `json:"checked"`
}

var CheckListBlock = &Block{
	BaseFeature: BaseFeature{
		Type:          "checklist",
		JSConstructor: "Checklist",
		JSFiles: []string{
			"editorjs/js/deps/tools/checklist.js",
		},
		Build: func(fb *FeatureBlock) *FeatureBlock {
			return fb
		},
	},
	RenderFunc: func(b editor.FeatureBlock, c context.Context, w io.Writer) error {
		var items = make([]checkListItem, 0)
		var checklistItems = b.Data().Data["items"].([]interface{})
		for _, item := range checklistItems {
			item := item.(map[string]interface{})
			items = append(items, checkListItem{
				Text: item["text"].(string),
				Checked: item["checked"].(bool),
			})
		}
		return renderCheckList(b, items).Render(c, w)
	},
}

templ renderCheckList(fb editor.FeatureBlock, items []checkListItem) {
	<ul { templ.Attributes(fb.Attributes())... }>
		for _, item := range items {
			<li class={ templ.KV("is-checked", item.Checked) }>@templ.Raw(item.Text)</li>
		}
	</ul>
}
