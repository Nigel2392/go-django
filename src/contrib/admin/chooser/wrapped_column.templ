package chooser

import "github.com/Nigel2392/go-django/src/views/list"
import "github.com/Nigel2392/go-django/src/core/attrs"
import "net/http"

type wrappedColumnGroup[T attrs.Definer] struct {
    *list.ListColumnGroup[T]
    _Definition *ChooserDefinition[T]
}

func (c *wrappedColumnGroup[T]) AddColumn(column list.ListColumn[T]) {
    c.ListColumnGroup.AddColumn(column)
}

templ (c *wrappedColumnGroup[T]) Component(r *http.Request) {
    <tr class="column-group godjango-chooser-list-group" data-chooser-value={ attrs.ToString(attrs.PrimaryKey(c.Instance)) } data-chooser-preview={ c._Definition.GetPreviewString(r.Context(), c.Instance) }>
        for _, column := range c.Columns {
            <td class="list-column">
                @column.Component(r, c.Definitions, c.Instance)
            </td>
        }
    </tr>
}