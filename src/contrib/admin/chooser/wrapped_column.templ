package chooser

import "github.com/Nigel2392/go-django/src/views/list"
import "github.com/Nigel2392/go-django/src/core/attrs"
import "net/http"
import "encoding/json"

type wrappedColumnGroup[T attrs.Definer] struct {
    *list.ListColumnGroup[T]
    _Definition *ChooserDefinition[T]
}

func (c *wrappedColumnGroup[T]) AddColumn(column list.ListColumn[T]) {
    c.ListColumnGroup.AddColumn(column)
}

templ (c *wrappedColumnGroup[T]) Component(r *http.Request, form *list.ListForm[T]) {
    {{ var data = c._Definition.GetExtraData(r.Context(), c.Instance) }}
    {{ var dataBytes []byte }}
    {{ var err error }}
    if data != nil {
        {{ dataBytes, err = json.Marshal(data) }}
        if err != nil {
            {{ return err }}
        }
    }

    <tr class="column-group godjango-chooser-list-group" data-chooser-value={ attrs.ToString(attrs.PrimaryKey(c.Instance)) } data-chooser-preview={ c._Definition.GetPreviewString(r.Context(), c.Instance) } data-chooser-data={ string(dataBytes) }>
		@c.RenderColumns(r, form)
	</tr>
}