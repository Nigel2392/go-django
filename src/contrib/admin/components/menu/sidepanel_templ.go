// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package menu

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/Nigel2392/go-django/src/forms/media"
import "github.com/Nigel2392/go-django/src/core/ctx"
import "github.com/Nigel2392/go-django/src/core/filesystem/tpl"
import "net/http"
import "context"
import "io"
import "github.com/Nigel2392/go-django/src/core/logger"
import "runtime/debug"

type BaseSidePanel struct {
	ID           string
	Ordering     int
	TemplateName string
	Request      *http.Request
	Hidden       func(p *BaseSidePanel, r *http.Request) bool
	PanelMedia   func(p *BaseSidePanel, r *http.Request) media.Media
	PanelButton  func(p *BaseSidePanel, r *http.Request) templ.Component
	Context      func(p *BaseSidePanel, r *http.Request, c ctx.Context) ctx.Context
}

func (p *BaseSidePanel) Order() int {
	return p.Ordering
}

func (p *BaseSidePanel) Name() string {
	return p.ID
}

func (p *BaseSidePanel) IsShown() bool {
	if p.Hidden == nil {
		return true
	}
	return !p.Hidden(p, p.Request)
}

func (p *BaseSidePanel) Media() media.Media {
	if p.PanelMedia == nil {
		return nil
	}
	return p.PanelMedia(p, p.Request)
}

func (p *BaseSidePanel) Button() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		if p.PanelButton == nil {
			return nil
		}
		templ_7745c5c3_Err = p.PanelButton(p, p.Request).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func (p *BaseSidePanel) Content() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"side-panel\" id=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(p.ID)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `src/contrib/admin/components/menu/sidepanel.templ`, Line: 53, Col: 37}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\"><div class=\"side-panel__body\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = p.panelContent().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func (p *BaseSidePanel) panelContent() templ.Component {
	return templ.ComponentFunc(func(c context.Context, w io.Writer) error {
		defer func() {
			if r := recover(); r != nil {
				logger.Fatalf(1, "Error rendering side panel %q: %v\n%s", p.ID, r, debug.Stack())
			}
		}()
		var context ctx.Context = ctx.RequestContext(p.Request)
		context.Set("panel", p)
		if p.Context != nil {
			context = p.Context(p, p.Request, context)
		}
		return tpl.FRender(w, context, p.TemplateName)
	})
}

var _ = templruntime.GeneratedTemplate
