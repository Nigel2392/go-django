package menu

import (
    "net/http"
	"github.com/Nigel2392/go-django/src/core/assert"
	"context"
	"io"
)

type Action interface {
    IsShown(r *http.Request) bool
    Component(r *http.Request) templ.Component
}

type BaseAction struct {
    ClassName string
    Show      func(r *http.Request) bool
	Text      func(ctx context.Context) string
    URL       func(r *http.Request) string
}

func (a *BaseAction) IsShown(r *http.Request) bool {
    if a.Show != nil {
        return a.Show(r)
    }
    return true
}

templ (a *BaseAction) Component(r *http.Request) {
    {{ assert.False(a.Text == nil, "Text must not be nil") }}
    if a.URL != nil {
        {{ var url = a.URL(r) }}
        <a href={ templ.SafeURL(url) } class={ a.ClassName }>{ a.Text(ctx) }</a>
    } else {
        <button class={ a.ClassName }>{ a.Text(ctx) }</button>
    }
}

type Actions struct {
    Request  *http.Request
    ClassName string
    Actions   []Action
}

func (a *Actions) IsShown() bool {
    for _, col := range a.Actions {
        if col.IsShown(a.Request) {
            {{ return true }}
        }
    }
    return false
}

func (a *Actions) Render(ctx context.Context, w io.Writer) error {
    return a.Component().Render(ctx, w)
}

templ (a *Actions) Component() {
    {{ var shownList = make([]Action, 0) }}
    for _, col := range a.Actions {
        if !col.IsShown(a.Request) {
            {{ continue }}
        }
        {{ shownList = append(shownList, col) }}
    }

    if len(shownList) == 0 {
        {{ return }}
    }

    <div data-controller="dropdown" class={ "dropdown", a.ClassName }>
        <button type="button" class="dropdown__toggle dropdown__toggle--icon" data-dropdown-target="toggle" aria-expanded="false">
            <svg class="icon icon-dots-horizontal dropdown__toggle-icon" viewBox="0 0 16 16">
                <path d="M4.75 8c0 .969-.813 1.75-1.75 1.75-.969 0-1.75-.781-1.75-1.75 0-.938.781-1.75 1.75-1.75.938 0 1.75.813 1.75 1.75Zm5 0c0 .969-.813 1.75-1.75 1.75-.969 0-1.75-.781-1.75-1.75 0-.938.781-1.75 1.75-1.75.938 0 1.75.813 1.75 1.75Zm1.5 0c0-.938.781-1.75 1.75-1.75.938 0 1.75.813 1.75 1.75 0 .969-.813 1.75-1.75 1.75-.969 0-1.75-.781-1.75-1.75Z"></path>
            </svg>
        </button>
        <div data-dropdown-target="content" class="dropdown__content">
            for _, col := range a.Actions {
                if !col.IsShown(a.Request) {
                    {{ continue }}
                }
                @col.Component(a.Request)
            }
        </div>
    </div>
}
