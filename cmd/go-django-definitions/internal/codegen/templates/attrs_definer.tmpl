// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc {{ .SQLCVersion }}

package {{ .PackageName }};

import (
    "github.com/Nigel2392/go-django/src/core/attrs"
    "github.com/Nigel2392/go-django/src/forms/widgets"

    "database/sql"
    "fmt"
    {{ range $struct := .Structs }}{{ range $field := $struct.Fields }}{{ if $field.RelatedObjectPackage }}
    {{$field.RelatedObjectPackageAdressor}}"{{ $field.RelatedObjectPackage }}"{{ end }}{{ end }}{{end}}
)

var (
    _ widgets.Widget
    globalDB *sql.DB
)

func SetDB(db *sql.DB) {
    globalDB = db
}
{{ $obj := . }}
{{ range $choices := $obj.Choices }}
var {{ $choices.Name }}Options = func() []widgets.Option {
    var options = make([]widgets.Option, {{ len $choices.Choices }})
    {{ range $i, $option := $choices.Choices }}
    options[{{ $i }}] = widgets.NewOption("{{ $option.Value }}", "{{ label $option.Name }}", "{{ $option.Value }}"){{ end }}
    return options
}
{{ end }}
{{ range $struct := $obj.Structs }}
func (o *{{ $struct.Name }}) String() string {
    return fmt.Sprintf(
        "<{{ $struct.Name }} %v>",
        o.{{ $struct.PrimaryField.Name }},
    )
}

func (o *{{ $struct.Name }}) FieldDefs() attrs.Definitions {
    var fields = make([]attrs.Field, {{ len $struct.Fields }})
    {{ range $i, $field := $struct.Fields }}
    fields[{{ $i }}] = attrs.NewField(
        o, "{{ $field.Name }}", &attrs.FieldConfig{
            Null: {{ $field.Null }},
            Blank: {{ $field.Blank }},
            ReadOnly: {{ $field.ReadOnly }},{{ if $field.RelatedObjectName }}
            RelatedObject: &{{$field.RelatedObjectPackageAdressor}}{{if $field.RelatedObjectPackageAdressor}}.{{end}}{{ $field.RelatedObjectName }}{},{{ end }}{{ if not $field.RelatedObjectName }}
            Label: "{{ label $field.Name }}",{{ end }}
            Primary: {{ $field.Primary }},{{ if $field.Choices }}
            FormWidget: func(attrs.FieldConfig) widgets.Widget {
                return widgets.NewSelectInput(
                    nil, {{ $field.Choices }}Options,
                )            
            },{{ end }}
        },
    ){{ end }}
    return attrs.Define(o, fields...)
}
{{ end }}
