// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package list

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/Nigel2392/django/core/attrs"
	"strings"
)

type List[T attrs.Definer] struct {
	Columns []ListColumn[T]
	groups  []ColumnGroup[T]
}

func NewList[T attrs.Definer](list []T, columns ...ListColumn[T]) *List[T] {
	var l = &List[T]{
		Columns: columns,
		groups:  make([]ColumnGroup[T], 0, len(list)),
	}

	for _, item := range list {
		var group = ColumnGroup[T]{
			Definitons: item.FieldDefs(),
			Columns:    columns,
			Instance:   item,
		}

		l.groups = append(l.groups, group)
	}

	return l
}

func (l *List[T]) Render() string {
	var component = l.Component()
	var b strings.Builder
	var ctx = context.Background()
	component.Render(ctx, &b)
	return b.String()
}

func (l *List[T]) Component() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<table class=\"list\"><thead><tr class=\"list-header\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, column := range l.Columns {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<th class=\"list-column-header\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = column.Header().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</th>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</tr></thead> <tbody>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, group := range l.groups {
			templ_7745c5c3_Err = group.Component().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</tbody></table>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
