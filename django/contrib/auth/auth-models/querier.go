// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package models

import (
	"context"
)

type Querier interface {
	AddPermissionToGroup(ctx context.Context, groupID uint64, permissionID uint64) error
	AddUserToGroup(ctx context.Context, userID uint64, groupID uint64) error
	AddUserToGroups(ctx context.Context, userID uint64, groupIds []uint64) error
	CheckUserHasPermissions(ctx context.Context, iD uint64, permissionnames []string) (bool, error)
	CreateGroup(ctx context.Context, name string, description string) error
	CreatePermission(ctx context.Context, name string, description string) error
	CreateUser(ctx context.Context, email string, username string, password string, firstName string, lastName string, isAdministrator bool, isActive bool) error
	DeleteGroup(ctx context.Context, id uint64) error
	DeletePermission(ctx context.Context, id uint64) error
	DeleteUser(ctx context.Context, id uint64) error
	DeleteUserGroups(ctx context.Context, userID uint64) error
	GetAllGroups(ctx context.Context) ([]Group, error)
	GetAllPermissions(ctx context.Context) ([]Permission, error)
	GetAllUsers(ctx context.Context) ([]User, error)
	GetGroupByID(ctx context.Context, id uint64) (Group, error)
	GetGroupsByUserID(ctx context.Context, userID uint64) ([]Group, error)
	GetGroupsWithPagination(ctx context.Context, limit int32, offset int32) ([]Group, error)
	GetPermissionByID(ctx context.Context, id uint64) (Permission, error)
	GetPermissionByName(ctx context.Context, name string) (Permission, error)
	GetPermissionsByUserID(ctx context.Context, userID uint64) ([]Permission, error)
	GetPermissionsByUserIDAndPermissionNames(ctx context.Context, userID uint64, permissionnames []string) ([]Permission, error)
	GetPermissionsWithPagination(ctx context.Context, limit int32, offset int32) ([]Permission, error)
	GetUserByEmail(ctx context.Context, email string) (UserRow, error)
	GetUserById(ctx context.Context, id uint64) ([]UserRow, error)
	GetUserByName(ctx context.Context, username string) (UserRow, error)
	GetUsersByPermissionID(ctx context.Context, permissionID uint64) ([]User, error)
	GetUsersWithPagination(ctx context.Context, limit int32, offset int32) ([]User, error)
	GroupsDoNotBelongTo(ctx context.Context, userID uint64) ([]Group, error)
	ListPermissionsInGroup(ctx context.Context, groupID uint64) ([]Permission, error)
	ListUsersInGroup(ctx context.Context, groupID uint64) ([]User, error)
	PermissionsNotInGroup(ctx context.Context, groupID uint64) ([]Permission, error)
	PermissionsNotInUser(ctx context.Context, userID uint64) ([]Permission, error)
	RemovePermissionFromGroup(ctx context.Context, groupID uint64, permissionID uint64) error
	RemoveUserFromGroup(ctx context.Context, userID uint64, groupID uint64) error
	UpdateGroup(ctx context.Context, name string, description string, iD uint64) error
	UpdatePermission(ctx context.Context, name string, description string, iD uint64) error
	UpdateUser(ctx context.Context, email string, username string, password string, firstName string, lastName string, isAdministrator bool, isActive bool, iD uint64) error
}

var _ Querier = (*Queries)(nil)
